<alvisnlp-plan id="entity-occurrences">
  <param name="entities">
    <alias module="entries" param="target"/>
    <alias module="clean.feature" param="target"/>
  </param>

  <param name="candidates">
    <alias module="candidates" param="target"/>
    <alias module="clean.feature-candidate" param="target"/>
  </param>

  <param name="caseInsensitive">
    <alias module="project" param="caseInsensitive"/>
  </param>

  <param name="wordStartCaseInsensitive">
    <alias module="project" param="wordStartCaseInsensitive"/>
  </param>

  <param name="outFile">
    <alias module="write-matched" param="corpusFile"/>
    <alias module="write-unmatched" param="corpusFile"/>
  </param>

  <entries class="Action">
    <target>documents.sections.relations[@kind == "text-bound"].tuples</target>
    <action>set:feat:check-annotations_entity-occurrences("please-check")</action>
    <setFeatures/>
  </entries>

  <candidates class="Action">
    <target>documents.sections.relations[@kind == "text-bound"].tuples</target>
    <action>set:feat:check-annotations_entity-occurrences_candidate("yes")</action>
    <setFeatures/>
  </candidates>

  <match-relation class="Action">
    <target>documents.sections</target>
    <action>new:relation:check-annotations_entity-occurrences</action>
    <createRelations/>
  </match-relation>

  <project class="ElementProjector">
    <entries>sort:nsval(documents.sections.relations.tuples[@check-annotations_entity-occurrences == "please-check"], @form ^ "__" ^ @type)</entries>
    <key>@form</key>
    <targetLayer>check-annotations_entity-occurrences</targetLayer>
    <action>
      $ as target.section.relations:check-annotations_entity-occurrences.new:tuple.(
        set:arg:occurrence(target) |
        set:arg:entity(entry)
      )
    </action>
    <createTuples/>
    <setArguments/>
  </project>

  <overlaps>
    <annotations class="RemoveOverlaps">
      <layer>check-annotations_entity-occurrences</layer>
    </annotations>

    <tuples class="Action">
      <target>documents.sections.relations:check-annotations_entity-occurrences.tuples[not args:occurrence]</target>
      <action>delete</action>
      <deleteElements/>
    </tuples>
  </overlaps>

  <match>
    <exact class="Action">
      <target>documents.sections.relations:check-annotations_entity-occurrences.tuples</target>
      <action>
	args:occurrence.span:alvisae.nav:tuples(@type)[@check-annotations_entity-occurrences_candidate == "yes"] as match.
	target.(
	  set:feat:match-boundaries("boundaries-exact") |
	  set:arg:match(match)
	)
      </action>
      <setFeatures/>
      <setArguments/>
    </exact>

    <remove-self-match class="Action">
      <target>documents.sections.relations:check-annotations_entity-occurrences.tuples[args:entity.id:unique == args:match.id:unique]</target>
      <action>
	delete
      </action>
      <deleteElements/>
    </remove-self-match>

    <broader class="Action">
      <target>documents.sections.relations:check-annotations_entity-occurrences.tuples[not args:match]</target>
      <action>
	args:occurrence.outside:alvisae.nav:tuples(@type)[@check-annotations_entity-occurrences_candidate == "yes"] as match.
	target.(
	  set:feat:match-boundaries("boundaries-broader") |
	  set:arg:match(match)
	)
      </action>
      <setFeatures/>
      <setArguments/>
    </broader>

    <narrower class="Action">
      <target>documents.sections.relations:check-annotations_entity-occurrences.tuples[not args:match]</target>
      <action>
	args:occurrence.inside:alvisae.nav:tuples(@type)[@check-annotations_entity-occurrences_candidate == "yes"] as match.
	target.(
	  set:feat:match-boundaries("boundaries-narrower") |
	  set:arg:match(match)
	)
      </action>
      <setFeatures/>
      <setArguments/>
    </narrower>

    <overlapping class="Action">
      <target>documents.sections.relations:check-annotations_entity-occurrences.tuples[not args:match]</target>
      <action>
	args:occurrence.overlapping:alvisae.nav:tuples(@type)[@check-annotations_entity-occurrences_candidate == "yes"] as match.
	target.(
	  set:feat:match-boundaries("boundaries-overlapping") |
	  set:arg:match(match)
	)
      </action>
      <setFeatures/>
      <setArguments/>
    </overlapping>

    <type-comparison class="Action">
      <target>documents.sections.relations:check-annotations_entity-occurrences.tuples[args:match]</target>
      <action>
	set:feat:match-type(if args:match.@type == args:entity.@type then "type-identical" else "type-mismatch")
      </action>
      <setFeatures/>
    </type-comparison>

    <none class="Action">
      <target>documents.sections.relations:check-annotations_entity-occurrences.tuples[not args:match]</target>
      <action>
	set:feat:match-boundaries("boundaries-none")
      </action>
      <setFeatures/>
    </none>
  </match>

  <write-matched class="TabularExport">
    <outDir>.</outDir>
    <lines>documents.sections.relations:check-annotations_entity-occurrences.tuples[@match-boundaries != "boundaries-exact" and @match-boundaries != "boundaries-none" and @match-type != "type-identical"]</lines>
    <columns separator=";">
      @match-boundaries;
      @match-type;
      args:entity.relation.section.document.@campaign-id;
      args:entity.relation.section.document.@campaign-name;
      args:entity.relation.section.document.@id;
      args:entity.relation.section.document.@external-id;
      args:entity.@type;
      str:normalizeSpace(args:entity.@form);
      args:entity.(@start_ ^ "-" ^ @end_);
      args:match.relation.section.document.@campaign-id;
      args:match.relation.section.document.@campaign-name;
      args:match.relation.section.document.@id;
      args:match.relation.section.document.@external-id;
      args:match.@type;
      str:normalizeSpace(args:match.@form);
      args:match.(@start_ ^ "-" ^ @end_)
    </columns>
    <headers>
      "DIFF_BOUNDARIES",
      "DIFF_TYPE",
      "ENTITY_CAMPAIGN_ID",
      "ENTITY_CAMPAIGN_NAME",
      "ENTITY_DOCID",
      "ENTITY_EXTDOCID",
      "ENTITY_TYPE",
      "ENTITY_FORM",
      "ENTITY_OFFSET",
      "MATCH_CAMPAIGN_ID",
      "MATCH_CAMPAIGN_NAME",
      "MATCH_DOCID",
      "MATCH_EXTDOCID",
      "MATCH_TYPE",
      "MATCH_FORM",
      "MATCH_OFFSET"
    </headers>
  </write-matched>

  <write-unmatched class="TabularExport">
    <append/>
    <outDir>.</outDir>
    <lines>documents.sections.relations:check-annotations_entity-occurrences.tuples[@match-boundaries == "boundaries-none"]</lines>
    <columns separator=";">
      @match-boundaries;
      "";
      args:entity.relation.section.document.@campaign-id;
      args:entity.relation.section.document.@campaign-name;
      args:entity.relation.section.document.@id;
      args:entity.relation.section.document.@external-id;
      args:entity.@type;
      str:normalizeSpace(args:entity.@form);
      args:entity.(@start_ ^ "-" ^ @end_);
      args:occurrence.section.document.@campaign-id;
      args:occurrence.section.document.@campaign-name;
      args:occurrence.section.document.@id;
      args:occurrence.section.document.@external-id;
      "";
      str:normalizeSpace(args:occurrence.@form);
      args:occurrence.(start ^ "-" ^ end)
    </columns>
    <headers>
      "DIFF_BOUNDARIES",
      "DIFF_TYPE",
      "ENTITY_CAMPAIGN_ID",
      "ENTITY_CAMPAIGN_NAME",
      "ENTITY_DOCID",
      "ENTITY_EXTDOCID",
      "ENTITY_TYPE",
      "ENTITY_FORM",
      "ENTITY_OFFSET",
      "MATCH_CAMPAIGN_ID",
      "MATCH_CAMPAIGN_NAME",
      "MATCH_DOCID",
      "MATCH_EXTDOCID",
      "MATCH_TYPE",
      "MATCH_FORM",
      "MATCH_OFFSET"
    </headers>
  </write-unmatched>

  <clean>
    <layer class="ClearLayers">
      <layerNames>check-annotations_entity-occurrences</layerNames>
    </layer>

    <relation class="Action">
      <target>documents.sections.relations:check-annotations_entity-occurrences</target>
      <action>delete</action>
      <deleteElements/>
    </relation>

    <feature class="Action">
      <target>documents.sections.relations[@kind == "text-bound"].tuples</target>
      <action>set:remove-feature:check-annotations_entity-occurrences</action>
      <setFeatures/>
    </feature>

    <feature-candidate class="Action">
      <target>documents.sections.relations[@kind == "text-bound"].tuples</target>
      <action>set:remove-feature:check-annotations_entity-occurrences_candidate</action>
      <setFeatures/>
    </feature-candidate>
  </clean>
</alvisnlp-plan>
