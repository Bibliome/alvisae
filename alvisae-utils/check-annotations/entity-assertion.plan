<alvisnlp-plan id="entity-assertion">
  <param name="outFile">
    <alias module="check" param="outFile"/>
  </param>
  
  <param name="entities">
    <alias module="mark" param="target"/>
  </param>

  <param name="condition">
    <alias module="check" param="assertion"/>
  </param>

  <mark class="Action">
    <target>documents.sections.relations[@kind == "text-bound"].tuples</target>
    <action>$[@type != corpus.@check-annotations_exclusive-zones and not (relation.section.document.relations[@name == corpus.@check-annotations_exclusive-zones].tuples and args.outside:alvisae[@type == corpus.@check-annotations_exclusive-zones])].set:feat:check-annotations_entity-assertion("please-check")</action>
    <setFeatures/>
  </mark>
  
  <check class="Assert">
    <target>documents.sections.relations[@kind == "text-bound"].tuples[@check-annotations_entity-assertion == "please-check"]</target>
    <severe>false</severe>
    <message>
      relation.section.document.@id ^ "\t" ^
      relation.section.document.@external-id ^ "\t" ^
      @type ^ "\t" ^
      str:replace(args{0}.ctx:before(20), "\n", "\\n") ^ "\t" ^
      str:replace(@form, "\n", "\\n") ^ "\t" ^
      str:replace(args{-1}.ctx:after(20), "\n", "\\n") ^ "\t" ^
      args:entity.(@start_ ^ "-" ^ @end_)
    </message>
  </check>

  <clean class="Action">
    <target>documents.sections.relations[@kind == "text-bound"].tuples</target>
    <action>set:remove-feature:check-annotations_entity-assertion</action>
    <setFeatures/>
  </clean>
</alvisnlp-plan>
