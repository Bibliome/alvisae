<alvisnlp-plan id="alvisae-check_common">
  <param name="url">
    <alias module="load" param="url"/>
  </param>

  <param name="username">
    <alias module="load" param="username"/>
  </param>

  <param name="password">
    <alias module="load" param="password"/>
  </param>

  <param name="schema">
    <alias module="load" param="schema"/>
  </param>

  <param name="taskName">
    <alias module="load" param="taskName"/>
  </param>

  <param name="campaignId">
    <alias module="load" param="campaignId"/>
  </param>

  <param name="userNames">
    <alias module="load" param="userNames"/>
  </param>

  <param name="alvisaeUrlPrefix">
    <alias module="alvisae-url.prefix" param="value"/>
  </param>

  <param name="exclusiveZones">
    <alias module="exclusive-zones" param="value"/>
  </param>

  <load class="AlvisAEReader">
    <externalIdFeature>external-id</externalIdFeature>
    <campaignIdFeature>campaign-id</campaignIdFeature>
    <campaignNameFeature>campaign-name</campaignNameFeature>
    <userIdFeature>user-id</userIdFeature>
    <taskIdFeature>task-id</taskIdFeature>
  </load>

  <exclusive-zones class="SetFeature">
    <target>$</target>
    <feature>check-annotations_exclusive-zones</feature>
    <value/>
  </exclusive-zones>

  <alvisae-url>
    <prefix class="SetFeature">
      <target>$</target>
      <feature>alvisae-url-prefix</feature>
    </prefix>
    
    <doc-url class="Action">
      <target>documents</target>
      <action>
	set:feat:alvisae-url(
	corpus.@alvisae-url-prefix ^
	"/#docView:u=" ^ (sections.relations.tuples[@user-id != ""]){0}.@user-id ^
	"&amp;c=" ^ @campaign-id ^
	"&amp;d=" ^ @id ^
	"&amp;o=0" ^
        "&amp;t=" ^ (sections.relations.tuples[@task-id != ""]){0}.@task-id
        )
      </action>
      <setFeatures/>
    </doc-url>
  </alvisae-url>
  
  <start-end class="Action">
    <target>documents.sections.relations[@kind == "text-bound"].tuples</target>
    <action>
      set:feat:start_(args:frag0.start) |
      set:feat:end_((if args:frag3 then args:frag3 else (if args:frag2 then args:frag2 else (if args:frag1 then args:frag1 else args:frag0))).end) |
      set:feat:form(str:join:' '(args, @form))
    </action>
    <setFeatures/>
  </start-end>

  <superform class="Action">
    <target>documents.sections.relations[@kind == "text-bound"].tuples</target>
    <action>set:feat:superform(str:sub(relation.section.contents, @start_, @end_))</action>
    <setFeatures/>
  </superform>
</alvisnlp-plan>
